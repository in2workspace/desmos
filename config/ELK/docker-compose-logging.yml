networks:
  desmos:
    name: desmos-network
    driver: bridge

services:

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: es01
    labels:
      co.elastic.logs/module: elasticsearch
    ports:
      - 9200:9200
    volumes:
      #      - certs:/usr/share/elasticsearch/config/certs
      - es_data:/usr/share/elasticsearch/data
    networks:
      - desmos
    environment:
      - node.name=es01
      #      - cluster.name=${CLUSTER_NAME}
      #      - cluster.initial_master_nodes=es01,es02,es03
      #      - discovery.seed_hosts=es02,es03
      #      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "discovery.type=single-node"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      #      - xpack.security.http.ssl.key=certs/es01/es01.key
      #      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      #      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      #      - xpack.security.transport.ssl.key=certs/es01/es01.key
      #      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      #      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      #      - xpack.security.transport.ssl.verification_mode=certificate
      #      - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${ES_MEM_LIMIT}
      #    ulimits:
      #      memlock:
      #        soft: -1
      #        hard: -1
      #    healthcheck:
      #      test:
      #        [
    #          "CMD-SHELL",
    #          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
    #        ]
    #      interval: 10s
    #      timeout: 10    s
    #      retries: 120

  #  es02:
  #    #    depends_on:
  #    #    #      es01:
  #    #    #        condition: service_healthy
  #    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
  #    container_name: es02
  #    labels:
  #      co.elastic.logs/module: elasticsearch
  #    #    volumes:
  #    #      - certs:/usr/share/elasticsearch/config/certs
  #    #      - esdata02:/usr/share/elasticsearch/data
  #    ports:
  #      - 9202:9200
  #    environment:
  #      - node.name=es02
  #      - cluster.name=${CLUSTER_NAME}
  #      - cluster.initial_master_nodes=es01,es02,es03
  #      - discovery.seed_hosts=es01,es03
  #      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  #      - bootstrap.memory_lock=false
  #      - xpack.security.enabled=false
  #      - xpack.security.transport.ssl.enabled=false
  #      - xpack.security.http.ssl.enabled=false
  #    #      - xpack.security.http.ssl.key=certs/es02/es02.key
  #    #      - xpack.security.http.ssl.certificate=certs/es02/es02.crt
  #    #      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
  #    #      - xpack.security.transport.ssl.key=certs/es02/es02.key
  #    #      - xpack.security.transport.ssl.certificate=certs/es02/es02.crt
  #    #      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
  #    #      - xpack.security.transport.ssl.verification_mode=certificate
  #    #      - xpack.license.self_generated.type=${LICENSE}
  #    mem_limit: ${ES_MEM_LIMIT}
  #    #    ulimits:
  #    #      memlock:
  #    #        soft: -1
  #    #        hard: -1
  #    #    healthcheck:
  #    #      test:
  #    #        [
  #    #          "CMD-SHELL",
  #    #          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
  #    #        ]
  #    #      interval: 10s
  #    #      timeout: 10s
  #    #      retries: 120

  #  es03:
  #    #    depends_on:
  #    #      es02:
  #    #        condition: service_healthy
  #    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
  #    container_name: es03
  #    labels:
  #      co.elastic.logs/module: elasticsearch
  #    #    volumes:
  #    #      - certs:/usr/share/elasticsearch/config/certs
  #    #      - esdata03:/usr/share/elasticsearch/data
  #    ports:
  #      - 9203:9200
  #    environment:
  #      - node.name=es03
  #      - cluster.name=${CLUSTER_NAME}
  #      - cluster.initial_master_nodes=es01,es02,es03
  #      - discovery.seed_hosts=es01,es02
  #      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  #      - bootstrap.memory_lock=false
  #      - xpack.security.enabled=false
  #      - xpack.security.transport.ssl.enabled=false
  #      - xpack.security.http.ssl.enabled=false
  #    #      - xpack.security.http.ssl.key=certs/es03/es03.key
  #    #      - xpack.security.http.ssl.certificate=certs/es03/es03.crt
  #    #      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
  #    #      - xpack.security.transport.ssl.key=certs/es03/es03.key
  #    #      - xpack.security.transport.ssl.certificate=certs/es03/es03.crt
  #    #      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
  #    #      - xpack.security.transport.ssl.verification_mode=certificate
  #    #      - xpack.license.self_generated.type=${LICENSE}
  #    mem_limit: ${ES_MEM_LIMIT}
  #    #    ulimits:
  #    #      memlock:
  #    #        soft: -1
  #    #        hard: -1
  #    #    healthcheck:
  #    #      test:
  #    #        [
  #    #          "CMD-SHELL",
  #    #          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
  #    #        ]
  #    #      interval: 10s
  #    #      timeout: 10s
  #    #      retries: 120

  kibana:
    #    depends_on:
    #      es01:
    #        condition: service_healthy
    depends_on:
      - es01
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    labels:
      co.elastic.logs/module: kibana
    #    volumes:
    #      #        - certs:/usr/share/kibana/config/certs
    #      #        - kibanadata:/usr/share/kibana/data
    #      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - desmos
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
    #      - ELASTICSEARCH_USERNAME=kibana_system
    #      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    #      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    #      - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    #      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    #      - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    mem_limit: ${KB_MEM_LIMIT}
  #    healthcheck:
  #      test:
  #        [
  #          "CMD-SHELL",
  #          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
  #        ]
  #      interval: 10s
  #      timeout: 10s
  #      retries: 120

  logstash:
    depends_on:
      - es01
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    container_name: logstash
    labels:
      co.elastic.logs/module: logstash
    user: root
    volumes:
      #      - logstashdata01:/usr/share/logstash/data
      #      - certs:/usr/share/logstash/certs
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
    networks:
      - desmos
    environment:
      - NODE_NAME="logstash"
      - xpack.monitoring.enabled=false
      #      - ELASTIC_USER=elastic
      #      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_HOSTS=http://es01:9200
      - LOGSTASH_DEBUG=true
    command: bash -c "sleep 30 && logstash -f /usr/share/logstash/pipeline/logstash.conf"
    ports:
      - "5044:5044/tcp"
    mem_limit: ${LS_MEM_LIMIT}

volumes:
  es_data:
    driver: local